{"version":3,"file":"main.js","mappings":"mBAAO,IAAMA,EAAwBC,SAASC,cAAc,iBAC/CC,EAAuBF,SAASC,cAAc,+BAE9CE,EAAmBH,SAASC,cAAc,0BAC1CG,EAA+BJ,SAASC,cACnD,+BC+DFF,EAAsBM,iBAAiB,SAAS,SAAAC,GAC9CA,EAAIC,iBA5DoB,WACxB,IAAMC,EAAYR,SAASC,cAAc,WAAWQ,MAC9CC,EAASV,SAASC,cAAc,QAAQQ,MACxCE,EAASX,SAASC,cAAc,QAAQQ,MAE9CG,QAAQC,IAAI,UAEZ,IACIC,EACAC,EACAC,EA2CiBC,EAAKC,EAEtBC,EAhDAC,EAAS,GAKb,KAAIZ,GAAaG,EAASD,EAAS,GAoBjC,OAFAP,EAAiBkB,YAAc,aAC/BjB,EAA6BiB,YAAc,SAlB3C,KAAOD,EAAOE,OAASd,GAAW,CAChC,GAGE,IAFAO,GAAO,EAsCaG,EArCWP,EAuCjCQ,YAFiBF,EArCQP,GAuCZ,GAAMa,KAAKT,UAAYI,EAAMD,EAAM,GAvC9CH,EAwCCS,KAAKC,MAAML,GAvCPH,EAAI,EAAGA,EAAII,EAAOE,OAAQN,IAE7B,GAAIF,GAAUM,EAAOJ,GAAI,CAEvBD,GAAO,EACP,cAGIA,GAEVK,EAAOK,KAAKX,GAQhBF,QAAQC,IAAI,SAAUO,GACtBjB,EAAiBkB,YAAcD,EAAOM,KAAK,KAE3CN,EAAOO,MAAK,SAASC,EAAGC,GACtB,OAAOD,EAAIC,KAGbzB,EAA6BiB,YAAcD,EAAOM,KAAK,KAmBvDI,MAGF5B,EAAqBG,iBAAiB,SAAS,WAjB7CO,QAAQC,IAAI,SAEZV,EAAiBkB,YAAc,UAC/BjB,EAA6BiB,YAAc,mB","sources":["webpack://num/./src/utils/constants.js","webpack://num/./src/pages/index.js"],"sourcesContent":["export const buttonNumRandomAction = document.querySelector('.form__button');\nexport const buttonNumResetAction = document.querySelector('.summary-data__button-reset');\n\nexport const outputDataResult = document.querySelector('.summary-data__numbers');\nexport const outputDataResultConsistently = document.querySelector(\n  '.summary-data__consistently'\n);\n","import '../pages/index.css';\n\nimport {\n  buttonNumRandomAction,\n  buttonNumResetAction,\n  outputDataResult,\n  outputDataResultConsistently,\n} from '../utils/constants.js';\n\nconst generateNumRandom = () => {\n  const numLength = document.querySelector('#length').value;\n  const numMin = document.querySelector('#min').value;\n  const numMax = document.querySelector('#max').value;\n\n  console.log('random');\n\n  let result = [];\n  let random;\n  let unic;\n  let i;\n\n  if (numLength <= numMax - numMin + 1) {\n    while (result.length < numLength) {\n      do {\n        unic = true;\n        random = randomInteger(numMin, numMax);\n        for (i = 0; i < result.length; i++) {\n          // console.log('первая генерация числа', random);\n          if (random == result[i]) {\n            // такое число уже было\n            unic = false;\n            break;\n          }\n        }\n      } while (!unic); // повторить генерацию числа\n      // console.log('повторная генерацию числа', random);\n      result.push(random);\n    }\n  } else {\n    outputDataResult.textContent = 'Error';\n    outputDataResultConsistently.textContent = 'Error';\n    return;\n  }\n\n  console.log('result', result);\n  outputDataResult.textContent = result.join(' ');\n\n  result.sort(function(a, b) {\n    return a - b;\n  });\n\n  outputDataResultConsistently.textContent = result.join(' ');\n  return result;\n};\n\nconst resetNumRandom = () => {\n  console.log('reset');\n\n  outputDataResult.textContent = 'Numbers';\n  outputDataResultConsistently.textContent = 'Consistently';\n};\n\nconst randomInteger = (min, max) => {\n  // получить случайное число от (min-0.5) до (max+0.5)\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\n  return Math.round(rand);\n};\n\nbuttonNumRandomAction.addEventListener('click', evt => {\n  evt.preventDefault();\n  generateNumRandom();\n});\n\nbuttonNumResetAction.addEventListener('click', () => {\n  resetNumRandom();\n});\n"],"names":["buttonNumRandomAction","document","querySelector","buttonNumResetAction","outputDataResult","outputDataResultConsistently","addEventListener","evt","preventDefault","numLength","value","numMin","numMax","console","log","random","unic","i","min","max","rand","result","textContent","length","Math","round","push","join","sort","a","b","generateNumRandom"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"mBAAO,IAAMA,EAAwBC,SAASC,cAAc,iBAC/CC,EAAuBF,SAASC,cAAc,+BAE9CE,EAAmBH,SAASC,cAAc,0BAC1CG,EAA+BJ,SAASC,cACnD,+BAGWI,EAAYL,SAASC,cAAc,oBCE5CK,EAAO,GA8EXP,EAAsBQ,iBAAiB,SAAS,SAAAC,GAC9CA,EAAIC,iBA7EoB,WACxB,IAAMC,EAAYV,SAASC,cAAc,WAAWU,MAC9CC,EAASZ,SAASC,cAAc,QAAQU,MACxCE,EAASb,SAASC,cAAc,QAAQU,MAE9CG,QAAQC,IAAI,UAEZ,IACIC,EACAC,EACAC,EA4DiBC,EAAKC,EAEtBC,EAjEAC,EAAS,GAKb,KAAIZ,GAAaG,EAASD,EAAS,GAoBjC,OAFAT,EAAiBoB,YAAc,aAC/BnB,EAA6BmB,YAAc,SAlB3C,KAAOD,EAAOE,OAASd,GAAW,CAChC,GAGE,IAFAO,GAAS,EAuDWG,EAtDWP,EAwDjCQ,YAFiBF,EAtDQP,GAwDZ,GAAMa,KAAKT,UAAYI,EAAMD,EAAM,GAxD9CH,EAyDCS,KAAKC,MAAML,GAxDPH,EAAI,EAAGA,EAAII,EAAOE,OAAQN,IAE7B,GAAIF,GAAUM,EAAOJ,GAAI,CAEvBD,GAAS,EACT,cAGIA,GAEVK,EAAOK,KAAKX,GAQhBF,QAAQC,IAAI,SAAUO,GACtBnB,EAAiBoB,YAAcD,EAAOM,KAAK,KAE3C,IAAIC,EAAY7B,SAAS8B,cAAc,OACvCD,EAAUE,UAAY,wBACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAOE,OAAQQ,IAAK,CACtC,IAAIC,EAAajC,SAAS8B,cAAc,QACxCG,EAAWF,UAAY,WACvBE,EAAWV,YAAcD,EAAOU,GAAK,IACrCH,EAAUK,YAAYD,GAExBjC,SAASmC,eAAe,WAAWC,QAAQP,GAE3CP,EAAOe,MAAK,SAASC,EAAGC,GACtB,OAAOD,EAAIC,KAGbnC,EAA6BmB,YAAcD,EAAOM,KAAK,KAEvDd,QAAQC,IAAI,+BAAgCZ,EAAiBoB,aAC7DjB,EAAKqB,KAAKxB,EAAiBoB,aAuB3BiB,MAGFtC,EAAqBK,iBAAiB,SAAS,WAnB7CO,QAAQC,IAAI,SAEZZ,EAAiBoB,YAAc,UAC/BnB,EAA6BmB,YAAc,eAC3CjB,EAAO,GACPD,EAAUkB,YAAc,Q","sources":["webpack://num/./src/utils/constants.js","webpack://num/./src/pages/index.js"],"sourcesContent":["export const buttonNumRandomAction = document.querySelector('.form__button');\r\nexport const buttonNumResetAction = document.querySelector('.summary-data__button-reset');\r\n\r\nexport const outputDataResult = document.querySelector('.summary-data__numbers');\r\nexport const outputDataResultConsistently = document.querySelector(\r\n  '.summary-data__consistently'\r\n);\r\n\r\nexport const arrResult = document.querySelector('.previous-result');\r\n","import '../pages/index.css';\r\n\r\nimport {\r\n  buttonNumRandomAction,\r\n  buttonNumResetAction,\r\n  outputDataResult,\r\n  outputDataResultConsistently,\r\n  arrResult,\r\n} from '../utils/constants.js';\r\n\r\nlet arrR = [];\r\n\r\nconst generateNumRandom = () => {\r\n  const numLength = document.querySelector('#length').value;\r\n  const numMin = document.querySelector('#min').value;\r\n  const numMax = document.querySelector('#max').value;\r\n\r\n  console.log('random');\r\n\r\n  let result = [];\r\n  let random;\r\n  let unique;\r\n  let i;\r\n\r\n  if (numLength <= numMax - numMin + 1) {\r\n    while (result.length < numLength) {\r\n      do {\r\n        unique = true;\r\n        random = randomInteger(numMin, numMax);\r\n        for (i = 0; i < result.length; i++) {\r\n          // console.log('первая генерация числа', random);\r\n          if (random == result[i]) {\r\n            // такое число уже было\r\n            unique = false;\r\n            break;\r\n          }\r\n        }\r\n      } while (!unique); // повторить генерацию числа\r\n      // console.log('повторная генерацию числа', random);\r\n      result.push(random);\r\n    }\r\n  } else {\r\n    outputDataResult.textContent = 'Error';\r\n    outputDataResultConsistently.textContent = 'Error';\r\n    return;\r\n  }\r\n\r\n  console.log('result', result);\r\n  outputDataResult.textContent = result.join(' ');\r\n\r\n  let resultDiv = document.createElement('div');\r\n  resultDiv.className = 'previous-result__item';\r\n  for (let j = 0; j < result.length; j++) {\r\n    let resultSpan = document.createElement('span');\r\n    resultSpan.className = 'num-item';\r\n    resultSpan.textContent = result[j] + ' ';\r\n    resultDiv.appendChild(resultSpan);\r\n  }\r\n  document.getElementById('results').prepend(resultDiv);\r\n\r\n  result.sort(function(a, b) {\r\n    return a - b;\r\n  });\r\n\r\n  outputDataResultConsistently.textContent = result.join(' ');\r\n\r\n  console.log('outputDataResult.textContent', outputDataResult.textContent);\r\n  arrR.push(outputDataResult.textContent);\r\n\r\n  return result;\r\n\r\n};\r\n\r\nconst resetNumRandom = () => {\r\n  console.log('reset');\r\n\r\n  outputDataResult.textContent = 'Numbers';\r\n  outputDataResultConsistently.textContent = 'Consistently';\r\n  arrR = [];\r\n  arrResult.textContent = ' ';\r\n};\r\n\r\nconst randomInteger = (min, max) => {\r\n  // получить случайное число от (min-0.5) до (max+0.5)\r\n  let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n  return Math.round(rand);\r\n};\r\n\r\nbuttonNumRandomAction.addEventListener('click', evt => {\r\n  evt.preventDefault();\r\n  generateNumRandom();\r\n});\r\n\r\nbuttonNumResetAction.addEventListener('click', () => {\r\n  resetNumRandom();\r\n});\r\n"],"names":["buttonNumRandomAction","document","querySelector","buttonNumResetAction","outputDataResult","outputDataResultConsistently","arrResult","arrR","addEventListener","evt","preventDefault","numLength","value","numMin","numMax","console","log","random","unique","i","min","max","rand","result","textContent","length","Math","round","push","join","resultDiv","createElement","className","j","resultSpan","appendChild","getElementById","prepend","sort","a","b","generateNumRandom"],"sourceRoot":""}